Here's a Python function to compute the cumulative distribution function (CDF) of a given probability distribution:

```python
import numpy as np

def cumulative_distribution_function(prob_distribution):
    """
    Computes the cumulative distribution function (CDF) for a given probability distribution.

    Args:
        prob_distribution (list or array): A list or array of probabilities (non-negative values) representing a probability distribution.

    Returns:
        cdf (list): The computed CDF as a list.
    """
    if not np.all(np.array(prob_distribution) >= 0):
        raise ValueError("Probability distribution contains negative values.")

    prob_array = np.array(prob_distribution)
    if not np.isclose(prob_array.sum(), 1):
        raise ValueError("Probability distribution doesn't sum to 1.")

    cdf = np.cumsum(prob_array)
    return cdf.tolist()
```

Now, here are a set of pytest tests to exercise the above function:

```python
import pytest
from cdf import cumulative_distribution_function

def test_valid_cumulative_distribution_function():
    prob_dist = [0.1, 0.2, 0.3, 0.4]
    expected_cdf = [0.1, 0.3, 0.6, 1.0]
    assert cumulative_distribution_function(prob_dist) == expected_cdf

def test_invalid_input_negative_values():
    with pytest.raises(ValueError):
        cumulative_distribution_function([0.1, -0.2, 0.3, 0.4])

def test_invalid_input_prob_dist_sum_not_one():
    with pytest.raises(ValueError):
        cumulative_distribution_function([0.1, 0.2, 0.3, 0.2])

def test_empty_input():
    with pytest.raises(ValueError):
        cumulative_distribution_function([])
```